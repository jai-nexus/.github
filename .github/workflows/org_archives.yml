---
name: Org Archives
on:
  schedule:
    - cron: "7,37 * * * *"   # every ~30 min; adjust as you like
  workflow_dispatch:

# Needed for scheduled runs that commit back to the repo
permissions:
  contents: write
  actions: read

concurrency:
  group: org-archives
  cancel-in-progress: false

jobs:
  archive:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout default branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main                 # set your default branch here

      - name: Configure Git author
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      # 🔧 Do your archiving here. Example moves “yesterday+” logs into /archives/org/YYYY-MM-DD/
      - name: Rotate org logs to /archives
        shell: bash
        run: |
          set -euxo pipefail
          TODAY_UTC=$(date -u +"%Y-%m-%d")
          DEST="archives/org/${TODAY_UTC}"
          mkdir -p "$DEST"
          # Example rule: move any files in memory/ older than 1 day
          if find memory -type f -mtime +0 | grep -q .; then
            find memory -type f -mtime +0 -print0 | xargs -0 -I{} bash -c 'mkdir -p "'"$DEST"'"/"$(dirname "{}")"; git mv "{}" "'"$DEST"'"/"$(dirname "{}")"/ 2>/dev/null || { mkdir -p "'"$DEST"'"; mv "{}" "'"$DEST"'"/; git add -A; }'
          fi

      - name: Commit changes (if any)
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # or OPERATOR_GH_TOKEN if you need wider org scope
        run: |
          set -euxo pipefail
          if ! git diff --staged --quiet || ! git diff --quiet; then
            git add -A
            git commit -m "chore(archives): rotate org logs for ${TODAY_UTC}" || echo "Nothing to commit"
            # Rebase to avoid non‑fast‑forward on busy branches
            git pull --rebase origin main
            git push origin HEAD:main
          else
            echo "No changes to archive."
          fi